const test0 = async function (t) {
  await t.runForSteps(23);
  await t.runForSteps(1);
  t.end();
}
const test1 = async function (t) {
  await t.runForSteps(23);
  await t.runForSteps(1);
  await t.runForSteps(58);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Balloon1").getClone(25).currentCostume, 0, "Expected Clone 25 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).currentCostume, 0, "Expected Clone 26 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).currentCostume, 0, "Expected Clone 27 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).currentCostume, 0, "Expected Clone 28 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).currentCostume, 0, "Expected Clone 29 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).currentCostume, 0, "Expected Clone 30 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getCloneCount(), 30, "Expected Sprite Balloon1 to have 30 clones");
  t.assert.equal(t.getSprite("Balloon1").getClone(1).direction, 42, 1, "Expected Clone 1 of Balloon1 to face in direction 42 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(6).direction, -51, 1, "Expected Clone 6 of Balloon1 to face in direction -51 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(11).direction, -129, 1, "Expected Clone 11 of Balloon1 to face in direction -129 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(12).direction, -162, 1, "Expected Clone 12 of Balloon1 to face in direction -162 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(15).direction, -157, 1, "Expected Clone 15 of Balloon1 to face in direction -157 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(16).direction, -115.99999999999997, 1, "Expected Clone 16 of Balloon1 to face in direction -115.99999999999997 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(17).direction, 16, 1, "Expected Clone 17 of Balloon1 to face in direction 16 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).direction, 159, 1, "Expected Clone 25 of Balloon1 to face in direction 159 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).direction, 107, 1, "Expected Clone 26 of Balloon1 to face in direction 107 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).direction, 132, 1, "Expected Clone 27 of Balloon1 to face in direction 132 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).direction, 165, 1, "Expected Clone 28 of Balloon1 to face in direction 165 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).direction, 179, 1, "Expected Clone 29 of Balloon1 to face in direction 179 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).direction, 163, 1, "Expected Clone 30 of Balloon1 to face in direction 163 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.color, 143, "Expected effect color of Clone 25 of Balloon1 to be 143");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.fisheye, 0, "Expected effect fisheye of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.whirl, 0, "Expected effect whirl of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.pixelate, 0, "Expected effect pixelate of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.mosaic, 0, "Expected effect mosaic of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.brightness, 0, "Expected effect brightness of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.ghost, 0, "Expected effect ghost of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.color, 138, "Expected effect color of Clone 26 of Balloon1 to be 138");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.fisheye, 0, "Expected effect fisheye of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.whirl, 0, "Expected effect whirl of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.pixelate, 0, "Expected effect pixelate of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.mosaic, 0, "Expected effect mosaic of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.brightness, 0, "Expected effect brightness of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.ghost, 0, "Expected effect ghost of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.color, 61, "Expected effect color of Clone 27 of Balloon1 to be 61");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.fisheye, 0, "Expected effect fisheye of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.whirl, 0, "Expected effect whirl of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.pixelate, 0, "Expected effect pixelate of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.mosaic, 0, "Expected effect mosaic of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.brightness, 0, "Expected effect brightness of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.ghost, 0, "Expected effect ghost of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.color, 73, "Expected effect color of Clone 28 of Balloon1 to be 73");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.fisheye, 0, "Expected effect fisheye of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.whirl, 0, "Expected effect whirl of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.pixelate, 0, "Expected effect pixelate of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.mosaic, 0, "Expected effect mosaic of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.brightness, 0, "Expected effect brightness of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.ghost, 0, "Expected effect ghost of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.color, 81, "Expected effect color of Clone 29 of Balloon1 to be 81");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.fisheye, 0, "Expected effect fisheye of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.whirl, 0, "Expected effect whirl of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.pixelate, 0, "Expected effect pixelate of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.mosaic, 0, "Expected effect mosaic of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.brightness, 0, "Expected effect brightness of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.ghost, 0, "Expected effect ghost of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.color, 170, "Expected effect color of Clone 30 of Balloon1 to be 170");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").layerOrder, 31, "Expected Sprite Balloon1 to be at layer 31");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).getLayerOrder(), 25, "Expected Clone 25 of Balloon1 to be at layer 25");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).getLayerOrder(), 26, "Expected Clone 26 of Balloon1 to be at layer 26");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).getLayerOrder(), 27, "Expected Clone 27 of Balloon1 to be at layer 27");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).getLayerOrder(), 28, "Expected Clone 28 of Balloon1 to be at layer 28");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).getLayerOrder(), 29, "Expected Clone 29 of Balloon1 to be at layer 29");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).getLayerOrder(), 30, "Expected Clone 30 of Balloon1 to be at layer 30");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).x, 181.07568065557058, 5, "Expected Clone 1 of Balloon1 to have x-position 181.07568065557058 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).y, -115.7048528340669, 5, "Expected Clone 1 of Balloon1 to have y-position -115.7048528340669 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).x, 175.6344770740109, 5, "Expected Clone 2 of Balloon1 to have x-position 175.6344770740109 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).y, 26.309394925474717, 5, "Expected Clone 2 of Balloon1 to have y-position 26.309394925474717 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).x, 14, 5, "Expected Clone 3 of Balloon1 to have x-position 14 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).y, 31, 5, "Expected Clone 3 of Balloon1 to have y-position 31 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).x, -56.93705494654593, 5, "Expected Clone 4 of Balloon1 to have x-position -56.93705494654593 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).y, -57.65444474015317, 5, "Expected Clone 4 of Balloon1 to have y-position -57.65444474015317 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).x, 40.83201379794136, 5, "Expected Clone 5 of Balloon1 to have x-position 40.83201379794136 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).y, 10, 5, "Expected Clone 5 of Balloon1 to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).x, 149.58226559877897, 5, "Expected Clone 6 of Balloon1 to have x-position 149.58226559877897 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).y, 1.173981003774685, 5, "Expected Clone 6 of Balloon1 to have y-position 1.173981003774685 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).x, -81.66039396388003, 5, "Expected Clone 7 of Balloon1 to have x-position -81.66039396388003 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).y, 82.74181936070761, 5, "Expected Clone 7 of Balloon1 to have y-position 82.74181936070761 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).x, -10.083262275228947, 5, "Expected Clone 8 of Balloon1 to have x-position -10.083262275228947 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).y, -118.3911315303693, 5, "Expected Clone 8 of Balloon1 to have y-position -118.3911315303693 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).x, 162.2072144234641, 5, "Expected Clone 9 of Balloon1 to have x-position 162.2072144234641 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).y, 66.48788963498069, 5, "Expected Clone 9 of Balloon1 to have y-position 66.48788963498069 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).x, 171.69701787297, 5, "Expected Clone 10 of Balloon1 to have x-position 171.69701787297 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).y, 86.09673629059505, 5, "Expected Clone 10 of Balloon1 to have y-position 86.09673629059505 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).x, 171.33097982579955, 5, "Expected Clone 11 of Balloon1 to have x-position 171.33097982579955 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).y, -1.3772589568113454, 5, "Expected Clone 11 of Balloon1 to have y-position -1.3772589568113454 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).x, -25.498447189992454, 5, "Expected Clone 12 of Balloon1 to have x-position -25.498447189992454 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).y, 5.552443309609771, 5, "Expected Clone 12 of Balloon1 to have y-position 5.552443309609771 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).x, 52.943049716828874, 5, "Expected Clone 13 of Balloon1 to have x-position 52.943049716828874 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).y, -73.36054919950328, 5, "Expected Clone 13 of Balloon1 to have y-position -73.36054919950328 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).x, 108.76533368564677, 5, "Expected Clone 14 of Balloon1 to have x-position 108.76533368564677 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).y, 79.22961568046959, 5, "Expected Clone 14 of Balloon1 to have y-position 79.22961568046959 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).x, -22.920895731519742, 5, "Expected Clone 15 of Balloon1 to have x-position -22.920895731519742 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).y, 31.87331977938886, 5, "Expected Clone 15 of Balloon1 to have y-position 31.87331977938886 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).x, 186.26994417183516, 5, "Expected Clone 16 of Balloon1 to have x-position 186.26994417183516 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).y, -49.61847596331449, 5, "Expected Clone 16 of Balloon1 to have y-position -49.61847596331449 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).x, 79.93540567947785, 5, "Expected Clone 17 of Balloon1 to have x-position 79.93540567947785 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).y, -41.26058506331188, 5, "Expected Clone 17 of Balloon1 to have y-position -41.26058506331188 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).x, 37.587653302606476, 5, "Expected Clone 18 of Balloon1 to have x-position 37.587653302606476 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).y, -8.387583561439634, 5, "Expected Clone 18 of Balloon1 to have y-position -8.387583561439634 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).x, -31.059625973709018, 5, "Expected Clone 19 of Balloon1 to have x-position -31.059625973709018 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).y, -27.20852933556322, 5, "Expected Clone 19 of Balloon1 to have y-position -27.20852933556322 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).x, -23.456101200967463, 5, "Expected Clone 20 of Balloon1 to have x-position -23.456101200967463 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).y, -109.16585382202575, 5, "Expected Clone 20 of Balloon1 to have y-position -109.16585382202575 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).x, 112.15056640401545, 5, "Expected Clone 21 of Balloon1 to have x-position 112.15056640401545 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).y, -47.93179336787479, 5, "Expected Clone 21 of Balloon1 to have y-position -47.93179336787479 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).x, -28.11639291054576, 5, "Expected Clone 22 of Balloon1 to have x-position -28.11639291054576 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).y, -22.547156314714996, 5, "Expected Clone 22 of Balloon1 to have y-position -22.547156314714996 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).x, -27.538132268916087, 5, "Expected Clone 23 of Balloon1 to have x-position -27.538132268916087 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).y, 17.65015023645098, 5, "Expected Clone 23 of Balloon1 to have y-position 17.65015023645098 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).x, -7.624321208617665, 5, "Expected Clone 24 of Balloon1 to have x-position -7.624321208617665 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).y, -28.149117018127686, 5, "Expected Clone 24 of Balloon1 to have y-position -28.149117018127686 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).x, -43.712581953654755, 5, "Expected Clone 25 of Balloon1 to have x-position -43.712581953654755 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).y, 25.181804154105066, 5, "Expected Clone 25 of Balloon1 to have y-position 25.181804154105066 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).x, 78.93135169171207, 5, "Expected Clone 26 of Balloon1 to have x-position 78.93135169171207 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).y, -112.91511774783783, 5, "Expected Clone 26 of Balloon1 to have y-position -112.91511774783783 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).x, 21.718510104422922, 5, "Expected Clone 27 of Balloon1 to have x-position 21.718510104422922 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).y, -80.28088912490983, 5, "Expected Clone 27 of Balloon1 to have y-position -80.28088912490983 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).x, -84.01226694851778, 5, "Expected Clone 28 of Balloon1 to have x-position -84.01226694851778 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).y, -17.197455972110003, 5, "Expected Clone 28 of Balloon1 to have y-position -17.197455972110003 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).x, -128.08023529189853, 5, "Expected Clone 29 of Balloon1 to have x-position -128.08023529189853 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).y, 64.97680893075092, 5, "Expected Clone 29 of Balloon1 to have y-position 64.97680893075092 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).x, -74.4238558899441, 5, "Expected Clone 30 of Balloon1 to have x-position -74.4238558899441 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).y, -12.294677071742113, 5, "Expected Clone 30 of Balloon1 to have y-position -12.294677071742113 +-5");
  t.assert.not(t.getSprite("Balloon1").getClone(25).sayText, "Expected Clone 25 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(26).sayText, "Expected Clone 26 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(27).sayText, "Expected Clone 27 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(28).sayText, "Expected Clone 28 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(29).sayText, "Expected Clone 29 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(30).sayText, "Expected Clone 30 of Balloon1 not to say anything");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).size, 100, 1, "Expected Clone 25 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).size, 100, 1, "Expected Clone 26 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).size, 100, 1, "Expected Clone 27 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).size, 100, 1, "Expected Clone 28 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).size, 100, 1, "Expected Clone 29 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).size, 100, 1, "Expected Clone 30 of Balloon1 to have size 100 +-1");
  t.assert.equal(t.getStage().getVariable("time", false).value, "8", "Expected time to have value 8");
  t.assert.ok(t.getSprite("Balloon1").getClone(25).visible, "Expected Clone 25 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(26).visible, "Expected Clone 26 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(27).visible, "Expected Clone 27 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(28).visible, "Expected Clone 28 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(29).visible, "Expected Clone 29 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(30).visible, "Expected Clone 30 of Balloon1 to be visible");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).volume, 100, "Expected Clone 25 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).volume, 100, "Expected Clone 26 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).volume, 100, "Expected Clone 27 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).volume, 100, "Expected Clone 28 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).volume, 100, "Expected Clone 29 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).volume, 100, "Expected Clone 30 of Balloon1 to have volume 100");
  t.end();
}
const test2 = async function (t) {
  await t.runForSteps(23);
  await t.runForSteps(1);
  await t.runForSteps(58);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Balloon1").getClone(25).currentCostume, 0, "Expected Clone 25 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).currentCostume, 0, "Expected Clone 26 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).currentCostume, 0, "Expected Clone 27 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).currentCostume, 0, "Expected Clone 28 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).currentCostume, 0, "Expected Clone 29 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).currentCostume, 0, "Expected Clone 30 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getCloneCount(), 30, "Expected Sprite Balloon1 to have 30 clones");
  t.assert.equal(t.getSprite("Balloon1").getClone(1).direction, 42, 1, "Expected Clone 1 of Balloon1 to face in direction 42 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(6).direction, -51, 1, "Expected Clone 6 of Balloon1 to face in direction -51 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(11).direction, -129, 1, "Expected Clone 11 of Balloon1 to face in direction -129 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(12).direction, -162, 1, "Expected Clone 12 of Balloon1 to face in direction -162 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(15).direction, -157, 1, "Expected Clone 15 of Balloon1 to face in direction -157 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(16).direction, -115.99999999999997, 1, "Expected Clone 16 of Balloon1 to face in direction -115.99999999999997 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(17).direction, 16, 1, "Expected Clone 17 of Balloon1 to face in direction 16 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).direction, 159, 1, "Expected Clone 25 of Balloon1 to face in direction 159 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).direction, 107, 1, "Expected Clone 26 of Balloon1 to face in direction 107 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).direction, 132, 1, "Expected Clone 27 of Balloon1 to face in direction 132 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).direction, 165, 1, "Expected Clone 28 of Balloon1 to face in direction 165 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).direction, 179, 1, "Expected Clone 29 of Balloon1 to face in direction 179 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).direction, 163, 1, "Expected Clone 30 of Balloon1 to face in direction 163 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.color, 143, "Expected effect color of Clone 25 of Balloon1 to be 143");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.fisheye, 0, "Expected effect fisheye of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.whirl, 0, "Expected effect whirl of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.pixelate, 0, "Expected effect pixelate of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.mosaic, 0, "Expected effect mosaic of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.brightness, 0, "Expected effect brightness of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.ghost, 0, "Expected effect ghost of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.color, 138, "Expected effect color of Clone 26 of Balloon1 to be 138");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.fisheye, 0, "Expected effect fisheye of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.whirl, 0, "Expected effect whirl of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.pixelate, 0, "Expected effect pixelate of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.mosaic, 0, "Expected effect mosaic of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.brightness, 0, "Expected effect brightness of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.ghost, 0, "Expected effect ghost of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.color, 61, "Expected effect color of Clone 27 of Balloon1 to be 61");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.fisheye, 0, "Expected effect fisheye of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.whirl, 0, "Expected effect whirl of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.pixelate, 0, "Expected effect pixelate of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.mosaic, 0, "Expected effect mosaic of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.brightness, 0, "Expected effect brightness of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.ghost, 0, "Expected effect ghost of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.color, 73, "Expected effect color of Clone 28 of Balloon1 to be 73");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.fisheye, 0, "Expected effect fisheye of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.whirl, 0, "Expected effect whirl of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.pixelate, 0, "Expected effect pixelate of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.mosaic, 0, "Expected effect mosaic of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.brightness, 0, "Expected effect brightness of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.ghost, 0, "Expected effect ghost of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.color, 81, "Expected effect color of Clone 29 of Balloon1 to be 81");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.fisheye, 0, "Expected effect fisheye of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.whirl, 0, "Expected effect whirl of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.pixelate, 0, "Expected effect pixelate of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.mosaic, 0, "Expected effect mosaic of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.brightness, 0, "Expected effect brightness of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.ghost, 0, "Expected effect ghost of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.color, 170, "Expected effect color of Clone 30 of Balloon1 to be 170");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").layerOrder, 31, "Expected Sprite Balloon1 to be at layer 31");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).getLayerOrder(), 25, "Expected Clone 25 of Balloon1 to be at layer 25");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).getLayerOrder(), 26, "Expected Clone 26 of Balloon1 to be at layer 26");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).getLayerOrder(), 27, "Expected Clone 27 of Balloon1 to be at layer 27");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).getLayerOrder(), 28, "Expected Clone 28 of Balloon1 to be at layer 28");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).getLayerOrder(), 29, "Expected Clone 29 of Balloon1 to be at layer 29");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).getLayerOrder(), 30, "Expected Clone 30 of Balloon1 to be at layer 30");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).x, 181.07568065557058, 5, "Expected Clone 1 of Balloon1 to have x-position 181.07568065557058 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).y, -115.7048528340669, 5, "Expected Clone 1 of Balloon1 to have y-position -115.7048528340669 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).x, 175.6344770740109, 5, "Expected Clone 2 of Balloon1 to have x-position 175.6344770740109 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).y, 26.309394925474717, 5, "Expected Clone 2 of Balloon1 to have y-position 26.309394925474717 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).x, 14, 5, "Expected Clone 3 of Balloon1 to have x-position 14 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).y, 31, 5, "Expected Clone 3 of Balloon1 to have y-position 31 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).x, -56.93705494654593, 5, "Expected Clone 4 of Balloon1 to have x-position -56.93705494654593 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).y, -57.65444474015317, 5, "Expected Clone 4 of Balloon1 to have y-position -57.65444474015317 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).x, 40.83201379794136, 5, "Expected Clone 5 of Balloon1 to have x-position 40.83201379794136 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).y, 10, 5, "Expected Clone 5 of Balloon1 to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).x, 149.58226559877897, 5, "Expected Clone 6 of Balloon1 to have x-position 149.58226559877897 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).y, 1.173981003774685, 5, "Expected Clone 6 of Balloon1 to have y-position 1.173981003774685 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).x, -81.66039396388003, 5, "Expected Clone 7 of Balloon1 to have x-position -81.66039396388003 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).y, 82.74181936070761, 5, "Expected Clone 7 of Balloon1 to have y-position 82.74181936070761 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).x, -10.083262275228947, 5, "Expected Clone 8 of Balloon1 to have x-position -10.083262275228947 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).y, -118.3911315303693, 5, "Expected Clone 8 of Balloon1 to have y-position -118.3911315303693 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).x, 162.2072144234641, 5, "Expected Clone 9 of Balloon1 to have x-position 162.2072144234641 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).y, 66.48788963498069, 5, "Expected Clone 9 of Balloon1 to have y-position 66.48788963498069 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).x, 171.69701787297, 5, "Expected Clone 10 of Balloon1 to have x-position 171.69701787297 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).y, 86.09673629059505, 5, "Expected Clone 10 of Balloon1 to have y-position 86.09673629059505 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).x, 171.33097982579955, 5, "Expected Clone 11 of Balloon1 to have x-position 171.33097982579955 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).y, -1.3772589568113454, 5, "Expected Clone 11 of Balloon1 to have y-position -1.3772589568113454 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).x, -25.498447189992454, 5, "Expected Clone 12 of Balloon1 to have x-position -25.498447189992454 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).y, 5.552443309609771, 5, "Expected Clone 12 of Balloon1 to have y-position 5.552443309609771 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).x, 52.943049716828874, 5, "Expected Clone 13 of Balloon1 to have x-position 52.943049716828874 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).y, -73.36054919950328, 5, "Expected Clone 13 of Balloon1 to have y-position -73.36054919950328 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).x, 108.76533368564677, 5, "Expected Clone 14 of Balloon1 to have x-position 108.76533368564677 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).y, 79.22961568046959, 5, "Expected Clone 14 of Balloon1 to have y-position 79.22961568046959 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).x, -22.920895731519742, 5, "Expected Clone 15 of Balloon1 to have x-position -22.920895731519742 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).y, 31.87331977938886, 5, "Expected Clone 15 of Balloon1 to have y-position 31.87331977938886 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).x, 186.26994417183516, 5, "Expected Clone 16 of Balloon1 to have x-position 186.26994417183516 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).y, -49.61847596331449, 5, "Expected Clone 16 of Balloon1 to have y-position -49.61847596331449 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).x, 79.93540567947785, 5, "Expected Clone 17 of Balloon1 to have x-position 79.93540567947785 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).y, -41.26058506331188, 5, "Expected Clone 17 of Balloon1 to have y-position -41.26058506331188 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).x, 37.587653302606476, 5, "Expected Clone 18 of Balloon1 to have x-position 37.587653302606476 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).y, -8.387583561439634, 5, "Expected Clone 18 of Balloon1 to have y-position -8.387583561439634 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).x, -31.059625973709018, 5, "Expected Clone 19 of Balloon1 to have x-position -31.059625973709018 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).y, -27.20852933556322, 5, "Expected Clone 19 of Balloon1 to have y-position -27.20852933556322 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).x, -23.456101200967463, 5, "Expected Clone 20 of Balloon1 to have x-position -23.456101200967463 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).y, -109.16585382202575, 5, "Expected Clone 20 of Balloon1 to have y-position -109.16585382202575 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).x, 112.15056640401545, 5, "Expected Clone 21 of Balloon1 to have x-position 112.15056640401545 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).y, -47.93179336787479, 5, "Expected Clone 21 of Balloon1 to have y-position -47.93179336787479 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).x, -28.11639291054576, 5, "Expected Clone 22 of Balloon1 to have x-position -28.11639291054576 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).y, -22.547156314714996, 5, "Expected Clone 22 of Balloon1 to have y-position -22.547156314714996 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).x, -27.538132268916087, 5, "Expected Clone 23 of Balloon1 to have x-position -27.538132268916087 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).y, 17.65015023645098, 5, "Expected Clone 23 of Balloon1 to have y-position 17.65015023645098 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).x, -7.624321208617665, 5, "Expected Clone 24 of Balloon1 to have x-position -7.624321208617665 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).y, -28.149117018127686, 5, "Expected Clone 24 of Balloon1 to have y-position -28.149117018127686 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).x, -43.712581953654755, 5, "Expected Clone 25 of Balloon1 to have x-position -43.712581953654755 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).y, 25.181804154105066, 5, "Expected Clone 25 of Balloon1 to have y-position 25.181804154105066 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).x, 78.93135169171207, 5, "Expected Clone 26 of Balloon1 to have x-position 78.93135169171207 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).y, -112.91511774783783, 5, "Expected Clone 26 of Balloon1 to have y-position -112.91511774783783 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).x, 21.718510104422922, 5, "Expected Clone 27 of Balloon1 to have x-position 21.718510104422922 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).y, -80.28088912490983, 5, "Expected Clone 27 of Balloon1 to have y-position -80.28088912490983 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).x, -84.01226694851778, 5, "Expected Clone 28 of Balloon1 to have x-position -84.01226694851778 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).y, -17.197455972110003, 5, "Expected Clone 28 of Balloon1 to have y-position -17.197455972110003 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).x, -128.08023529189853, 5, "Expected Clone 29 of Balloon1 to have x-position -128.08023529189853 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).y, 64.97680893075092, 5, "Expected Clone 29 of Balloon1 to have y-position 64.97680893075092 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).x, -74.4238558899441, 5, "Expected Clone 30 of Balloon1 to have x-position -74.4238558899441 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).y, -12.294677071742113, 5, "Expected Clone 30 of Balloon1 to have y-position -12.294677071742113 +-5");
  t.assert.not(t.getSprite("Balloon1").getClone(25).sayText, "Expected Clone 25 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(26).sayText, "Expected Clone 26 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(27).sayText, "Expected Clone 27 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(28).sayText, "Expected Clone 28 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(29).sayText, "Expected Clone 29 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(30).sayText, "Expected Clone 30 of Balloon1 not to say anything");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).size, 100, 1, "Expected Clone 25 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).size, 100, 1, "Expected Clone 26 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).size, 100, 1, "Expected Clone 27 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).size, 100, 1, "Expected Clone 28 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).size, 100, 1, "Expected Clone 29 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).size, 100, 1, "Expected Clone 30 of Balloon1 to have size 100 +-1");
  t.assert.equal(t.getStage().getVariable("time", false).value, "8", "Expected time to have value 8");
  t.assert.ok(t.getSprite("Balloon1").getClone(25).visible, "Expected Clone 25 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(26).visible, "Expected Clone 26 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(27).visible, "Expected Clone 27 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(28).visible, "Expected Clone 28 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(29).visible, "Expected Clone 29 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(30).visible, "Expected Clone 30 of Balloon1 to be visible");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).volume, 100, "Expected Clone 25 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).volume, 100, "Expected Clone 26 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).volume, 100, "Expected Clone 27 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).volume, 100, "Expected Clone 28 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).volume, 100, "Expected Clone 29 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).volume, 100, "Expected Clone 30 of Balloon1 to have volume 100");
  t.clickCloneByCoords(108.76533368564677, 79.22961568046959, 1);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Balloon1").getClone(14).currentCostume, 1, "Expected Clone 14 of Balloon1 to have costume 1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).x, 182.4139418682883, 5, "Expected Clone 1 of Balloon1 to have x-position 182.4139418682883 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).y, -114.21856318311211, 5, "Expected Clone 1 of Balloon1 to have y-position -114.21856318311211 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).x, 177.4470926480842, 5, "Expected Clone 2 of Balloon1 to have x-position 177.4470926480842 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).y, 27.154631448956117, 5, "Expected Clone 2 of Balloon1 to have y-position 27.154631448956117 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).x, 14, 5, "Expected Clone 3 of Balloon1 to have x-position 14 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).y, 33, 5, "Expected Clone 3 of Balloon1 to have y-position 33 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).x, -57.68626813337775, 5, "Expected Clone 4 of Balloon1 to have x-position -57.68626813337775 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).y, -59.508812449286744, 5, "Expected Clone 4 of Balloon1 to have y-position -59.508812449286744 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).x, 42.56406460551023, 5, "Expected Clone 5 of Balloon1 to have x-position 42.56406460551023 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).y, 9, 5, "Expected Clone 5 of Balloon1 to have y-position 9 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).x, 148.02797367586504, 5, "Expected Clone 6 of Balloon1 to have x-position 148.02797367586504 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).y, 2.4326217858743604, 5, "Expected Clone 6 of Balloon1 to have y-position 2.4326217858743604 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).x, -83.63000946990444, 5, "Expected Clone 7 of Balloon1 to have x-position -83.63000946990444 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).y, 83.08911571604148, 5, "Expected Clone 7 of Balloon1 to have y-position 83.08911571604148 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).x, -8.242252568324066, 5, "Expected Clone 8 of Balloon1 to have x-position -8.242252568324066 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).y, -119.17259378734784, 5, "Expected Clone 8 of Balloon1 to have y-position -119.17259378734784 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).x, 163.90331061577697, 5, "Expected Clone 9 of Balloon1 to have x-position 163.90331061577697 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).y, 67.5477281634471, 5, "Expected Clone 9 of Balloon1 to have y-position 67.5477281634471 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).x, 173.20643703341554, 5, "Expected Clone 10 of Balloon1 to have x-position 173.20643703341554 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).y, 87.40885434857606, 5, "Expected Clone 10 of Balloon1 to have y-position 87.40885434857606 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).x, 169.7766879028856, 5, "Expected Clone 11 of Balloon1 to have x-position 169.7766879028856 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).y, -2.6358997389110206, 5, "Expected Clone 11 of Balloon1 to have y-position -2.6358997389110206 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).x, -26.11648117874235, 5, "Expected Clone 12 of Balloon1 to have x-position -26.11648117874235 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).y, 3.6503302770194637, 5, "Expected Clone 12 of Balloon1 to have y-position 3.6503302770194637 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).x, 53.392951825516604, 5, "Expected Clone 13 of Balloon1 to have x-position 53.392951825516604 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).y, -75.30928932907375, 5, "Expected Clone 13 of Balloon1 to have y-position -75.30928932907375 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).x, 108.24769559544173, 5, "Expected Clone 14 of Balloon1 to have x-position 108.24769559544173 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).y, 81.16146733304772, 5, "Expected Clone 14 of Balloon1 to have y-position 81.16146733304772 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).x, -23.70235798849829, 5, "Expected Clone 15 of Balloon1 to have x-position -23.70235798849829 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).y, 30.03231007248398, 5, "Expected Clone 15 of Balloon1 to have y-position 30.03231007248398 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).x, 184.47235607923682, 5, "Expected Clone 16 of Balloon1 to have x-position 184.47235607923682 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).y, -50.49521825689264, 5, "Expected Clone 16 of Balloon1 to have y-position -50.49521825689264 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).x, 80.48668039111185, 5, "Expected Clone 17 of Balloon1 to have x-position 80.48668039111185 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).y, -39.33806167143524, 5, "Expected Clone 17 of Balloon1 to have y-position -39.33806167143524 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).x, 38.76322380719142, 5, "Expected Clone 18 of Balloon1 to have x-position 38.76322380719142 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).y, -10.005617550189529, 5, "Expected Clone 18 of Balloon1 to have y-position -10.005617550189529 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).x, -30.214389450227618, 5, "Expected Clone 19 of Balloon1 to have x-position -30.214389450227618 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).y, -29.02114490963652, 5, "Expected Clone 19 of Balloon1 to have y-position -29.02114490963652 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).x, -21.495043427482962, 5, "Expected Clone 20 of Balloon1 to have x-position -21.495043427482962 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).y, -108.77310401737142, 5, "Expected Clone 20 of Balloon1 to have y-position -108.77310401737142 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).x, 113.61327380725379, 5, "Expected Clone 21 of Balloon1 to have x-position 113.61327380725379 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).y, -49.295790087999784, 5, "Expected Clone 21 of Balloon1 to have y-position -49.295790087999784 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).x, -29.08601215103843, 5, "Expected Clone 22 of Balloon1 to have x-position -29.08601215103843 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).y, -20.797916900436206, 5, "Expected Clone 22 of Balloon1 to have y-position -20.797916900436206 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).x, -25.842036076603236, 5, "Expected Clone 23 of Balloon1 to have x-position -25.842036076603236 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).y, 18.70998876491739, 5, "Expected Clone 23 of Balloon1 to have y-position 18.70998876491739 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).x, -7.868059895427959, 5, "Expected Clone 24 of Balloon1 to have x-position -7.868059895427959 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).y, -30.13420932141033, 5, "Expected Clone 24 of Balloon1 to have y-position -30.13420932141033 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).x, -42.995846054564154, 5, "Expected Clone 25 of Balloon1 to have x-position -42.995846054564154 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).y, 23.314643301110664, 5, "Expected Clone 25 of Balloon1 to have y-position 23.314643301110664 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).x, 80.84396120363813, 5, "Expected Clone 26 of Balloon1 to have x-position 80.84396120363813 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).y, -113.4998611572833, 5, "Expected Clone 26 of Balloon1 to have y-position -113.4998611572833 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).x, 23.20479975537771, 5, "Expected Clone 27 of Balloon1 to have x-position 23.20479975537771 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).y, -81.61915033762754, 5, "Expected Clone 27 of Balloon1 to have y-position -81.61915033762754 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).x, -83.49462885831274, 5, "Expected Clone 28 of Balloon1 to have x-position -83.49462885831274 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).y, -19.12930762468814, 5, "Expected Clone 28 of Balloon1 to have y-position -19.12930762468814 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).x, -128.04533047902396, 5, "Expected Clone 29 of Balloon1 to have x-position -128.04533047902396 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).y, 62.97711354043814, 5, "Expected Clone 29 of Balloon1 to have y-position 62.97711354043814 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).x, -73.83911248049861, 5, "Expected Clone 30 of Balloon1 to have x-position -73.83911248049861 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).y, -14.207286583668184, 5, "Expected Clone 30 of Balloon1 to have y-position -14.207286583668184 +-5");
  await t.runForSteps(57);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Balloon1").getCloneCount(), 29, "Expected Sprite Balloon1 to have 29 clones");
  t.assert.equal(t.getSprite("Balloon1").getClone(1).direction, -42, 1, "Expected Clone 1 of Balloon1 to face in direction -42 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(2).direction, -65, 1, "Expected Clone 2 of Balloon1 to face in direction -65 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(3).direction, 180, 1, "Expected Clone 3 of Balloon1 to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(4).direction, -22.000000000000014, 1, "Expected Clone 4 of Balloon1 to face in direction -22.000000000000014 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(7).direction, -101.47980805908958, 1, "Expected Clone 7 of Balloon1 to face in direction -101.47980805908958 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(8).direction, 67, 1, "Expected Clone 8 of Balloon1 to face in direction 67 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(9).direction, -122, 1, "Expected Clone 9 of Balloon1 to face in direction -122 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(10).direction, -131, 1, "Expected Clone 10 of Balloon1 to face in direction -131 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(13).direction, 12.999999999999986, 1, "Expected Clone 13 of Balloon1 to face in direction 12.999999999999986 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(20).direction, -133, 1, "Expected Clone 20 of Balloon1 to face in direction -133 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(23).direction, -7, 1, "Expected Clone 23 of Balloon1 to face in direction -7 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).direction, 73, 1, "Expected Clone 25 of Balloon1 to face in direction 73 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).direction, 48, 1, "Expected Clone 26 of Balloon1 to face in direction 48 +-1");
  t.assert.equal(t.getSprite("Balloon1").layerOrder, 30, "Expected Sprite Balloon1 to be at layer 30");
  t.assert.equal(t.getSprite("Balloon1").getClone(14).getLayerOrder(), 14, "Expected Clone 14 of Balloon1 to be at layer 14");
  t.assert.equal(t.getSprite("Balloon1").getClone(15).getLayerOrder(), 15, "Expected Clone 15 of Balloon1 to be at layer 15");
  t.assert.equal(t.getSprite("Balloon1").getClone(16).getLayerOrder(), 16, "Expected Clone 16 of Balloon1 to be at layer 16");
  t.assert.equal(t.getSprite("Balloon1").getClone(17).getLayerOrder(), 17, "Expected Clone 17 of Balloon1 to be at layer 17");
  t.assert.equal(t.getSprite("Balloon1").getClone(18).getLayerOrder(), 18, "Expected Clone 18 of Balloon1 to be at layer 18");
  t.assert.equal(t.getSprite("Balloon1").getClone(19).getLayerOrder(), 19, "Expected Clone 19 of Balloon1 to be at layer 19");
  t.assert.equal(t.getSprite("Balloon1").getClone(20).getLayerOrder(), 20, "Expected Clone 20 of Balloon1 to be at layer 20");
  t.assert.equal(t.getSprite("Balloon1").getClone(21).getLayerOrder(), 21, "Expected Clone 21 of Balloon1 to be at layer 21");
  t.assert.equal(t.getSprite("Balloon1").getClone(22).getLayerOrder(), 22, "Expected Clone 22 of Balloon1 to be at layer 22");
  t.assert.equal(t.getSprite("Balloon1").getClone(23).getLayerOrder(), 23, "Expected Clone 23 of Balloon1 to be at layer 23");
  t.assert.equal(t.getSprite("Balloon1").getClone(24).getLayerOrder(), 24, "Expected Clone 24 of Balloon1 to be at layer 24");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).getLayerOrder(), 25, "Expected Clone 25 of Balloon1 to be at layer 25");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).getLayerOrder(), 26, "Expected Clone 26 of Balloon1 to be at layer 26");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).getLayerOrder(), 27, "Expected Clone 27 of Balloon1 to be at layer 27");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).getLayerOrder(), 28, "Expected Clone 28 of Balloon1 to be at layer 28");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).getLayerOrder(), 29, "Expected Clone 29 of Balloon1 to be at layer 29");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).x, 133.84154919677832, 5, "Expected Clone 1 of Balloon1 to have x-position 133.84154919677832 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).y, -28.013763427734403, 5, "Expected Clone 1 of Balloon1 to have y-position -28.013763427734403 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).x, 111.79794296777334, 5, "Expected Clone 2 of Balloon1 to have x-position 111.79794296777334 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).y, 76.17834981087725, 5, "Expected Clone 2 of Balloon1 to have y-position 76.17834981087725 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).x, 14, 5, "Expected Clone 3 of Balloon1 to have x-position 14 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).y, 28.986251831054688, 5, "Expected Clone 3 of Balloon1 to have y-position 28.986251831054688 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).x, -101.14063296962354, 5, "Expected Clone 4 of Balloon1 to have x-position -101.14063296962354 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).y, -102.02740089622684, 5, "Expected Clone 4 of Balloon1 to have y-position -102.02740089622684 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).x, 143.0230114445052, 5, "Expected Clone 5 of Balloon1 to have x-position 143.0230114445052 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).y, -48.99999999999999, 5, "Expected Clone 5 of Balloon1 to have y-position -48.99999999999999 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).x, 57.87904214685631, 5, "Expected Clone 6 of Balloon1 to have x-position 57.87904214685631 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).y, 75.43378714765554, 5, "Expected Clone 6 of Balloon1 to have y-position 75.43378714765554 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).x, -197.4634295180766, 5, "Expected Clone 7 of Balloon1 to have x-position -197.4634295180766 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).y, 71.91421242466163, 5, "Expected Clone 7 of Balloon1 to have y-position 71.91421242466163 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).x, 98.53631043215903, 5, "Expected Clone 8 of Balloon1 to have x-position 98.53631043215903 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).y, -104.12003658946846, 5, "Expected Clone 8 of Balloon1 to have y-position -104.12003658946846 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).x, 133.97579351142738, 5, "Expected Clone 9 of Balloon1 to have x-position 133.97579351142738 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).y, 48.456886482106434, 5, "Expected Clone 9 of Balloon1 to have y-position 48.456886482106434 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).x, 133.56654984815984, 5, "Expected Clone 10 of Balloon1 to have x-position 133.56654984815984 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).y, 13.916494932693947, 5, "Expected Clone 10 of Balloon1 to have y-position 13.916494932693947 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).x, 79.62775637387705, 5, "Expected Clone 11 of Balloon1 to have x-position 79.62775637387705 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).y, -75.63706510069218, 5, "Expected Clone 11 of Balloon1 to have y-position -75.63706510069218 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).x, -61.962452526236184, 5, "Expected Clone 12 of Balloon1 to have x-position -61.962452526236184 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).y, -106.67222561321834, 5, "Expected Clone 12 of Balloon1 to have y-position -106.67222561321834 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).x, 79.48727412940474, 5, "Expected Clone 13 of Balloon1 to have x-position 79.48727412940474 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).y, -81.11801327509, 5, "Expected Clone 13 of Balloon1 to have y-position -81.11801327509 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).x, -69.0271688932541, 5, "Expected Clone 14 of Balloon1 to have x-position -69.0271688932541 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).y, -76.74625292799907, 5, "Expected Clone 14 of Balloon1 to have y-position -76.74625292799907 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).x, 80.21224670853313, 5, "Expected Clone 15 of Balloon1 to have x-position 80.21224670853313 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).y, -101.34627128442587, 5, "Expected Clone 15 of Balloon1 to have y-position -101.34627128442587 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).x, 112.46061366588349, 5, "Expected Clone 16 of Balloon1 to have x-position 112.46061366588349 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).y, 72.16829505740975, 5, "Expected Clone 16 of Balloon1 to have y-position 72.16829505740975 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).x, 106.94631307311808, 5, "Expected Clone 17 of Balloon1 to have x-position 106.94631307311808 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).y, -103.85158889768351, 5, "Expected Clone 17 of Balloon1 to have y-position -103.85158889768351 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).x, 18.809328911693537, 5, "Expected Clone 18 of Balloon1 to have x-position 18.809328911693537 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).y, -134.1528482058881, 5, "Expected Clone 18 of Balloon1 to have y-position -134.1528482058881 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).x, 92.24630743461802, 5, "Expected Clone 19 of Balloon1 to have x-position 92.24630743461802 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).y, -85.99361534742033, 5, "Expected Clone 19 of Balloon1 to have y-position -85.99361534742033 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).x, 195.12989937492898, 5, "Expected Clone 20 of Balloon1 to have x-position 195.12989937492898 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).y, -128.4075998552498, 5, "Expected Clone 20 of Balloon1 to have y-position -128.4075998552498 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).x, -85.32392809961364, 5, "Expected Clone 21 of Balloon1 to have x-position -85.32392809961364 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).y, 80.65796912773367, 5, "Expected Clone 21 of Balloon1 to have y-position 80.65796912773367 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).x, 72.53154307754214, 5, "Expected Clone 22 of Balloon1 to have x-position 72.53154307754214 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).y, 80.18062341596918, 5, "Expected Clone 22 of Balloon1 to have y-position 80.18062341596918 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).x, -22.00490373042501, 5, "Expected Clone 23 of Balloon1 to have x-position -22.00490373042501 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).y, -124.4324033067115, 5, "Expected Clone 23 of Balloon1 to have y-position -124.4324033067115 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).x, -1.4251639073092977, 5, "Expected Clone 24 of Balloon1 to have x-position -1.4251639073092977 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).y, -84.9806861725647, 5, "Expected Clone 24 of Balloon1 to have y-position -84.9806861725647 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).x, 191.77531289534986, 5, "Expected Clone 25 of Balloon1 to have x-position 191.77531289534986 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).y, -120.7000323172544, 5, "Expected Clone 25 of Balloon1 to have y-position -120.7000323172544 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).x, 109.40959951075543, 5, "Expected Clone 26 of Balloon1 to have x-position 109.40959951075543 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).y, -110.07466044515158, 5, "Expected Clone 26 of Balloon1 to have y-position -110.07466044515158 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).x, -53.471619626420434, 5, "Expected Clone 27 of Balloon1 to have x-position -53.471619626420434 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).y, -131.17670347421995, 5, "Expected Clone 27 of Balloon1 to have y-position -131.17670347421995 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).x, -126.02085133229878, 5, "Expected Clone 28 of Balloon1 to have x-position -126.02085133229878 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).y, -53.005219097703204, 5, "Expected Clone 28 of Balloon1 to have y-position -53.005219097703204 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).x, -39.923994732661086, 5, "Expected Clone 29 of Balloon1 to have x-position -39.923994732661086 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).y, -125.13863827538007, 5, "Expected Clone 29 of Balloon1 to have y-position -125.13863827538007 +-5");
  t.assert.equal(t.getStage().getVariable("score", false).value, "1", "Expected score to have value 1");
  t.assert.equal(t.getStage().getVariable("time", false).value, "6", "Expected time to have value 6");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1724670590560',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1724670590560',
      type: 'standard',
  },
  {
      test: test2,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1724670590560',
      type: 'standard',
  }
]
