const test0 = async function (t) {
  await t.runForSteps(23);
  await t.runForSteps(1);
  t.end();
}
const test1 = async function (t) {
  await t.runForSteps(23);
  await t.runForSteps(1);
  await t.runForSteps(72);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Balloon1").getClone(25).currentCostume, 0, "Expected Clone 25 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).currentCostume, 0, "Expected Clone 26 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).currentCostume, 0, "Expected Clone 27 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).currentCostume, 0, "Expected Clone 28 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).currentCostume, 0, "Expected Clone 29 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).currentCostume, 0, "Expected Clone 30 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getCloneCount(), 30, "Expected Sprite Balloon1 to have 30 clones");
  t.assert.equal(t.getSprite("Balloon1").getClone(4).direction, 5, 1, "Expected Clone 4 of Balloon1 to face in direction 5 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(5).direction, -36.999999999999986, 1, "Expected Clone 5 of Balloon1 to face in direction -36.999999999999986 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(10).direction, -108.99999999999997, 1, "Expected Clone 10 of Balloon1 to face in direction -108.99999999999997 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(12).direction, 165, 1, "Expected Clone 12 of Balloon1 to face in direction 165 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(13).direction, -72, 1, "Expected Clone 13 of Balloon1 to face in direction -72 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(19).direction, 170, 1, "Expected Clone 19 of Balloon1 to face in direction 170 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(20).direction, 119.99999999999996, 1, "Expected Clone 20 of Balloon1 to face in direction 119.99999999999996 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(21).direction, 4, 1, "Expected Clone 21 of Balloon1 to face in direction 4 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).direction, 61, 1, "Expected Clone 25 of Balloon1 to face in direction 61 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).direction, -104, 1, "Expected Clone 26 of Balloon1 to face in direction -104 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).direction, -85.00000000000003, 1, "Expected Clone 27 of Balloon1 to face in direction -85.00000000000003 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).direction, 42, 1, "Expected Clone 28 of Balloon1 to face in direction 42 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).direction, 104, 1, "Expected Clone 29 of Balloon1 to face in direction 104 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).direction, -77, 1, "Expected Clone 30 of Balloon1 to face in direction -77 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.color, 40, "Expected effect color of Clone 25 of Balloon1 to be 40");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.fisheye, 0, "Expected effect fisheye of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.whirl, 0, "Expected effect whirl of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.pixelate, 0, "Expected effect pixelate of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.mosaic, 0, "Expected effect mosaic of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.brightness, 0, "Expected effect brightness of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.ghost, 0, "Expected effect ghost of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.color, 69, "Expected effect color of Clone 26 of Balloon1 to be 69");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.fisheye, 0, "Expected effect fisheye of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.whirl, 0, "Expected effect whirl of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.pixelate, 0, "Expected effect pixelate of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.mosaic, 0, "Expected effect mosaic of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.brightness, 0, "Expected effect brightness of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.ghost, 0, "Expected effect ghost of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.color, 181, "Expected effect color of Clone 27 of Balloon1 to be 181");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.fisheye, 0, "Expected effect fisheye of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.whirl, 0, "Expected effect whirl of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.pixelate, 0, "Expected effect pixelate of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.mosaic, 0, "Expected effect mosaic of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.brightness, 0, "Expected effect brightness of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.ghost, 0, "Expected effect ghost of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.color, 29, "Expected effect color of Clone 28 of Balloon1 to be 29");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.fisheye, 0, "Expected effect fisheye of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.whirl, 0, "Expected effect whirl of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.pixelate, 0, "Expected effect pixelate of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.mosaic, 0, "Expected effect mosaic of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.brightness, 0, "Expected effect brightness of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.ghost, 0, "Expected effect ghost of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.color, 104, "Expected effect color of Clone 29 of Balloon1 to be 104");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.fisheye, 0, "Expected effect fisheye of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.whirl, 0, "Expected effect whirl of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.pixelate, 0, "Expected effect pixelate of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.mosaic, 0, "Expected effect mosaic of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.brightness, 0, "Expected effect brightness of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.ghost, 0, "Expected effect ghost of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.color, 44, "Expected effect color of Clone 30 of Balloon1 to be 44");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").layerOrder, 31, "Expected Sprite Balloon1 to be at layer 31");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).getLayerOrder(), 25, "Expected Clone 25 of Balloon1 to be at layer 25");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).getLayerOrder(), 26, "Expected Clone 26 of Balloon1 to be at layer 26");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).getLayerOrder(), 27, "Expected Clone 27 of Balloon1 to be at layer 27");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).getLayerOrder(), 28, "Expected Clone 28 of Balloon1 to be at layer 28");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).getLayerOrder(), 29, "Expected Clone 29 of Balloon1 to be at layer 29");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).getLayerOrder(), 30, "Expected Clone 30 of Balloon1 to be at layer 30");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).x, 139.01694510304927, 5, "Expected Clone 1 of Balloon1 to have x-position 139.01694510304927 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).y, -99.44943701658117, 5, "Expected Clone 1 of Balloon1 to have y-position -99.44943701658117 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).x, 95.53229764988637, 5, "Expected Clone 2 of Balloon1 to have x-position 95.53229764988637 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).y, -14.39324295887208, 5, "Expected Clone 2 of Balloon1 to have y-position -14.39324295887208 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).x, -203.7132289312398, 5, "Expected Clone 3 of Balloon1 to have x-position -203.7132289312398 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).y, 30.679197935569835, 5, "Expected Clone 3 of Balloon1 to have y-position 30.679197935569835 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).x, -65.61472036344094, 5, "Expected Clone 4 of Balloon1 to have x-position -65.61472036344094 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).y, -20.16597550406454, 5, "Expected Clone 4 of Balloon1 to have y-position -20.16597550406454 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).x, 183.06274427391847, 5, "Expected Clone 5 of Balloon1 to have x-position 183.06274427391847 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).y, -17.358399362721393, 5, "Expected Clone 5 of Balloon1 to have y-position -17.358399362721393 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).x, 162.37289303524918, 5, "Expected Clone 6 of Balloon1 to have x-position 162.37289303524918 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).y, 17.654633444196417, 5, "Expected Clone 6 of Balloon1 to have y-position 17.654633444196417 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).x, -18.44056498516884, 5, "Expected Clone 7 of Balloon1 to have x-position -18.44056498516884 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).y, 79.53631117107047, 5, "Expected Clone 7 of Balloon1 to have y-position 79.53631117107047 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).x, 173.38117435390643, 5, "Expected Clone 8 of Balloon1 to have x-position 173.38117435390643 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).y, 8.083908618105397, 5, "Expected Clone 8 of Balloon1 to have y-position 8.083908618105397 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).x, 169.75605718631383, 5, "Expected Clone 9 of Balloon1 to have x-position 169.75605718631383 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).y, -120.31580021124367, 5, "Expected Clone 9 of Balloon1 to have y-position -120.31580021124367 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).x, 94.78426796235547, 5, "Expected Clone 10 of Balloon1 to have x-position 94.78426796235547 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).y, 32.67249321886073, 5, "Expected Clone 10 of Balloon1 to have y-position 32.67249321886073 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).x, -0.4884950613335689, 5, "Expected Clone 11 of Balloon1 to have x-position -0.4884950613335689 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).y, 36.50651601674788, 5, "Expected Clone 11 of Balloon1 to have y-position 36.50651601674788 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).x, -20.483124242366586, 5, "Expected Clone 12 of Balloon1 to have x-position -20.483124242366586 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).y, -9.923374610195513, 5, "Expected Clone 12 of Balloon1 to have y-position -9.923374610195513 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).x, 166.4170017136144, 5, "Expected Clone 13 of Balloon1 to have x-position 166.4170017136144 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).y, 22.532889043741044, 5, "Expected Clone 13 of Balloon1 to have y-position 22.532889043741044 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).x, 117.56078182896613, 5, "Expected Clone 14 of Balloon1 to have x-position 117.56078182896613 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).y, -76.1153542681311, 5, "Expected Clone 14 of Balloon1 to have y-position -76.1153542681311 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).x, 16.06909056181552, 5, "Expected Clone 15 of Balloon1 to have x-position 16.06909056181552 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).y, -72.15903466954471, 5, "Expected Clone 15 of Balloon1 to have y-position -72.15903466954471 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).x, 85.05104042547066, 5, "Expected Clone 16 of Balloon1 to have x-position 85.05104042547066 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).y, -66.0225091230309, 5, "Expected Clone 16 of Balloon1 to have y-position -66.0225091230309 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).x, -106.82728984284034, 5, "Expected Clone 17 of Balloon1 to have x-position -106.82728984284034 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).y, 60.97532661533529, 5, "Expected Clone 17 of Balloon1 to have y-position 60.97532661533529 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).x, -160.97563122502248, 5, "Expected Clone 18 of Balloon1 to have x-position -160.97563122502248 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).y, 2.792385029965348, 5, "Expected Clone 18 of Balloon1 to have y-position 2.792385029965348 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).x, -118.56358792862449, 5, "Expected Clone 19 of Balloon1 to have x-position -118.56358792862449 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).y, 23.591253409372083, 5, "Expected Clone 19 of Balloon1 to have y-position 23.591253409372083 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).x, -143.16671752929688, 5, "Expected Clone 20 of Balloon1 to have x-position -143.16671752929688 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).y, 11.986236572265634, 5, "Expected Clone 20 of Balloon1 to have y-position 11.986236572265634 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).x, 47.74249695659521, 5, "Expected Clone 21 of Balloon1 to have x-position 47.74249695659521 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).y, -20.194023708507324, 5, "Expected Clone 21 of Balloon1 to have y-position -20.194023708507324 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).x, 56.69106227744327, 5, "Expected Clone 22 of Balloon1 to have x-position 56.69106227744327 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).y, -41.955958912922476, 5, "Expected Clone 22 of Balloon1 to have y-position -41.955958912922476 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).x, 43.57189421854558, 5, "Expected Clone 23 of Balloon1 to have x-position 43.57189421854558 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).y, -37.398058657475644, 5, "Expected Clone 23 of Balloon1 to have y-position -37.398058657475644 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).x, -131.9774588831458, 5, "Expected Clone 24 of Balloon1 to have x-position -131.9774588831458 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).y, -16.417043847281924, 5, "Expected Clone 24 of Balloon1 to have y-position -16.417043847281924 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).x, -7.305522757648253, 5, "Expected Clone 25 of Balloon1 to have x-position -7.305522757648253 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).y, -64.23155887176901, 5, "Expected Clone 25 of Balloon1 to have y-position -64.23155887176901 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).x, 165.2286690884078, 5, "Expected Clone 26 of Balloon1 to have x-position 165.2286690884078 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).y, -38.83675296635208, 5, "Expected Clone 26 of Balloon1 to have y-position -38.83675296635208 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).x, 104.7648336664748, 5, "Expected Clone 27 of Balloon1 to have x-position 104.7648336664748 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).y, 26.376115470167456, 5, "Expected Clone 27 of Balloon1 to have y-position 26.376115470167456 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).x, 41.678284890240235, 5, "Expected Clone 28 of Balloon1 to have x-position 41.678284890240235 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).y, 22.040275566835167, 5, "Expected Clone 28 of Balloon1 to have y-position 22.040275566835167 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).x, 55.900810226087515, 5, "Expected Clone 29 of Balloon1 to have x-position 55.900810226087515 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).y, -105.38522159275404, 5, "Expected Clone 29 of Balloon1 to have y-position -105.38522159275404 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).x, -202.51432881079177, 5, "Expected Clone 30 of Balloon1 to have x-position -202.51432881079177 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).y, 64.59334339076567, 5, "Expected Clone 30 of Balloon1 to have y-position 64.59334339076567 +-5");
  t.assert.not(t.getSprite("Balloon1").getClone(25).sayText, "Expected Clone 25 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(26).sayText, "Expected Clone 26 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(27).sayText, "Expected Clone 27 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(28).sayText, "Expected Clone 28 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(29).sayText, "Expected Clone 29 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(30).sayText, "Expected Clone 30 of Balloon1 not to say anything");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).size, 100, 1, "Expected Clone 25 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).size, 100, 1, "Expected Clone 26 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).size, 100, 1, "Expected Clone 27 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).size, 100, 1, "Expected Clone 28 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).size, 100, 1, "Expected Clone 29 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(30).size, 100, 1, "Expected Clone 30 of Balloon1 to have size 100 +-1");
  t.assert.equal(t.getStage().getVariable("time", false).value, "7", "Expected time to have value 7");
  t.assert.ok(t.getSprite("Balloon1").getClone(25).visible, "Expected Clone 25 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(26).visible, "Expected Clone 26 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(27).visible, "Expected Clone 27 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(28).visible, "Expected Clone 28 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(29).visible, "Expected Clone 29 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(30).visible, "Expected Clone 30 of Balloon1 to be visible");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).volume, 100, "Expected Clone 25 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).volume, 100, "Expected Clone 26 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).volume, 100, "Expected Clone 27 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).volume, 100, "Expected Clone 28 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).volume, 100, "Expected Clone 29 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(30).volume, 100, "Expected Clone 30 of Balloon1 to have volume 100");
  t.end();
}
const test2 = async function (t) {
  await t.runForSteps(23);
  await t.runForSteps(1);
  t.clickCloneByCoords(88.82535639108369, -22.583592135001282, 1);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Balloon1").getClone(13).currentCostume, 1, "Expected Clone 13 of Balloon1 to have costume 1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).currentCostume, 0, "Expected Clone 25 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getCloneCount(), 25, "Expected Sprite Balloon1 to have 25 clones");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).direction, 61, 1, "Expected Clone 25 of Balloon1 to face in direction 61 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.color, 40, "Expected effect color of Clone 25 of Balloon1 to be 40");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.fisheye, 0, "Expected effect fisheye of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.whirl, 0, "Expected effect whirl of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.pixelate, 0, "Expected effect pixelate of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.mosaic, 0, "Expected effect mosaic of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.brightness, 0, "Expected effect brightness of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.ghost, 0, "Expected effect ghost of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").layerOrder, 26, "Expected Sprite Balloon1 to be at layer 26");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).getLayerOrder(), 25, "Expected Clone 25 of Balloon1 to be at layer 25");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).x, 111.54044976882713, 5, "Expected Clone 1 of Balloon1 to have x-position 111.54044976882713 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).y, 41.90487739988242, 5, "Expected Clone 1 of Balloon1 to have y-position 41.90487739988242 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).x, -48.116925587528385, 5, "Expected Clone 2 of Balloon1 to have x-position -48.116925587528385 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).y, -4.348310739718011, 5, "Expected Clone 2 of Balloon1 to have y-position -4.348310739718011 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).x, -87.21478174124765, 5, "Expected Clone 3 of Balloon1 to have x-position -87.21478174124765 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).y, -53.961878394546325, 5, "Expected Clone 3 of Balloon1 to have y-position -53.961878394546325 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).x, -78.1651473191032, 5, "Expected Clone 4 of Balloon1 to have x-position -78.1651473191032 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).y, -104.83256671603694, 5, "Expected Clone 4 of Balloon1 to have y-position -104.83256671603694 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).x, 124.27623097238607, 5, "Expected Clone 5 of Balloon1 to have x-position 124.27623097238607 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).y, -132.36191280953142, 5, "Expected Clone 5 of Balloon1 to have y-position -132.36191280953142 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).x, 29.820194138097616, 5, "Expected Clone 6 of Balloon1 to have x-position 29.820194138097616 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).y, 73.91991594665186, 5, "Expected Clone 6 of Balloon1 to have y-position 73.91991594665186 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).x, 93.468453464635, 5, "Expected Clone 7 of Balloon1 to have x-position 93.468453464635 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).y, -11.085825140106166, 5, "Expected Clone 7 of Balloon1 to have y-position -11.085825140106166 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).x, 45.07623487078123, 5, "Expected Clone 8 of Balloon1 to have x-position 45.07623487078123 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).y, 73.45854058060013, 5, "Expected Clone 8 of Balloon1 to have y-position 73.45854058060013 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).x, 25.953404181655515, 5, "Expected Clone 9 of Balloon1 to have x-position 25.953404181655515 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).y, -112.77942251226003, 5, "Expected Clone 9 of Balloon1 to have y-position -112.77942251226003 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).x, 163.25659441917833, 5, "Expected Clone 10 of Balloon1 to have x-position 163.25659441917833 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).y, 79.55430746069123, 5, "Expected Clone 10 of Balloon1 to have y-position 79.55430746069123 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).x, -49.73939570022992, 5, "Expected Clone 11 of Balloon1 to have x-position -49.73939570022992 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).y, -98.80922137642284, 5, "Expected Clone 11 of Balloon1 to have y-position -98.80922137642284 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).x, -57.753066737129444, 5, "Expected Clone 12 of Balloon1 to have x-position -57.753066737129444 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).y, 49.045923136093926, 5, "Expected Clone 12 of Balloon1 to have y-position 49.045923136093926 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).x, 90.727469423674, 5, "Expected Clone 13 of Balloon1 to have x-position 90.727469423674 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).y, -21.96555814625139, 5, "Expected Clone 13 of Balloon1 to have y-position -21.96555814625139 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).x, 102.50868311842373, 5, "Expected Clone 14 of Balloon1 to have x-position 102.50868311842373 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).y, 67.09579866490019, 5, "Expected Clone 14 of Balloon1 to have y-position 67.09579866490019 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).x, -123.65349402192813, 5, "Expected Clone 15 of Balloon1 to have x-position -123.65349402192813 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).y, -37.32228170319267, 5, "Expected Clone 15 of Balloon1 to have y-position -37.32228170319267 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).x, 127.1525659055452, 5, "Expected Clone 16 of Balloon1 to have x-position 127.1525659055452 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).y, 71.68537573564618, 5, "Expected Clone 16 of Balloon1 to have y-position 71.68537573564618 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).x, -104.31414331587115, 5, "Expected Clone 17 of Balloon1 to have x-position -104.31414331587115 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).y, -83.00274148718498, 5, "Expected Clone 17 of Balloon1 to have y-position -83.00274148718498 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).x, -16.99756312250226, 5, "Expected Clone 18 of Balloon1 to have x-position -16.99756312250226 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).y, 0.279238502996535, 5, "Expected Clone 18 of Balloon1 to have y-position 0.279238502996535 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).x, -143.56892551266293, 5, "Expected Clone 19 of Balloon1 to have x-position -143.56892551266293 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).y, 11.787308542170912, 5, "Expected Clone 19 of Balloon1 to have y-position 11.787308542170912 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).x, -154.3923048454132, 5, "Expected Clone 20 of Balloon1 to have x-position -154.3923048454132 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).y, 83.98623657226562, 5, "Expected Clone 20 of Balloon1 to have y-position 83.98623657226562 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).x, 37.69756473744125, 5, "Expected Clone 21 of Balloon1 to have x-position 37.69756473744125 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).y, -104.97564050259825, 5, "Expected Clone 21 of Balloon1 to have y-position -104.97564050259825 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).x, -13.121523038029304, 5, "Expected Clone 22 of Balloon1 to have x-position -13.121523038029304 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).y, 83.98927891515045, 5, "Expected Clone 22 of Balloon1 to have y-position 83.98927891515045 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).x, -68.33712423125816, 5, "Expected Clone 23 of Balloon1 to have x-position -68.33712423125816 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).y, 53.224077653700974, 5, "Expected Clone 23 of Balloon1 to have y-position 53.224077653700974 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).x, 12.000609219374436, 5, "Expected Clone 24 of Balloon1 to have x-position 12.000609219374436 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).y, -18.930190374250863, 5, "Expected Clone 24 of Balloon1 to have y-position -18.930190374250863 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).x, -133.2507605857212, 5, "Expected Clone 25 of Balloon1 to have x-position -133.2507605857212 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).y, -134.0441441872417, 5, "Expected Clone 25 of Balloon1 to have y-position -134.0441441872417 +-5");
  t.assert.not(t.getSprite("Balloon1").getClone(25).sayText, "Expected Clone 25 of Balloon1 not to say anything");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).size, 100, 1, "Expected Clone 25 of Balloon1 to have size 100 +-1");
  t.assert.ok(t.getSprite("Balloon1").getClone(25).visible, "Expected Clone 25 of Balloon1 to be visible");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).volume, 100, "Expected Clone 25 of Balloon1 to have volume 100");
  await t.runForSteps(72);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Balloon1").getClone(25).currentCostume, 0, "Expected Clone 25 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).currentCostume, 0, "Expected Clone 26 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).currentCostume, 0, "Expected Clone 27 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).currentCostume, 0, "Expected Clone 28 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).currentCostume, 0, "Expected Clone 29 of Balloon1 to have costume 0");
  t.assert.equal(t.getSprite("Balloon1").getCloneCount(), 29, "Expected Sprite Balloon1 to have 29 clones");
  t.assert.equal(t.getSprite("Balloon1").getClone(4).direction, 5, 1, "Expected Clone 4 of Balloon1 to face in direction 5 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(5).direction, -36.999999999999986, 1, "Expected Clone 5 of Balloon1 to face in direction -36.999999999999986 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(10).direction, -108.99999999999997, 1, "Expected Clone 10 of Balloon1 to face in direction -108.99999999999997 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(12).direction, 165, 1, "Expected Clone 12 of Balloon1 to face in direction 165 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(18).direction, 170, 1, "Expected Clone 18 of Balloon1 to face in direction 170 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(19).direction, 119.99999999999996, 1, "Expected Clone 19 of Balloon1 to face in direction 119.99999999999996 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(20).direction, 4, 1, "Expected Clone 20 of Balloon1 to face in direction 4 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).direction, -104, 1, "Expected Clone 25 of Balloon1 to face in direction -104 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).direction, -85.00000000000003, 1, "Expected Clone 26 of Balloon1 to face in direction -85.00000000000003 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).direction, 42, 1, "Expected Clone 27 of Balloon1 to face in direction 42 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).direction, 104, 1, "Expected Clone 28 of Balloon1 to face in direction 104 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).direction, -77, 1, "Expected Clone 29 of Balloon1 to face in direction -77 +-1");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.color, 69, "Expected effect color of Clone 25 of Balloon1 to be 69");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.fisheye, 0, "Expected effect fisheye of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.whirl, 0, "Expected effect whirl of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.pixelate, 0, "Expected effect pixelate of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.mosaic, 0, "Expected effect mosaic of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.brightness, 0, "Expected effect brightness of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).effects.ghost, 0, "Expected effect ghost of Clone 25 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.color, 181, "Expected effect color of Clone 26 of Balloon1 to be 181");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.fisheye, 0, "Expected effect fisheye of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.whirl, 0, "Expected effect whirl of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.pixelate, 0, "Expected effect pixelate of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.mosaic, 0, "Expected effect mosaic of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.brightness, 0, "Expected effect brightness of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).effects.ghost, 0, "Expected effect ghost of Clone 26 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.color, 29, "Expected effect color of Clone 27 of Balloon1 to be 29");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.fisheye, 0, "Expected effect fisheye of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.whirl, 0, "Expected effect whirl of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.pixelate, 0, "Expected effect pixelate of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.mosaic, 0, "Expected effect mosaic of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.brightness, 0, "Expected effect brightness of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).effects.ghost, 0, "Expected effect ghost of Clone 27 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.color, 104, "Expected effect color of Clone 28 of Balloon1 to be 104");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.fisheye, 0, "Expected effect fisheye of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.whirl, 0, "Expected effect whirl of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.pixelate, 0, "Expected effect pixelate of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.mosaic, 0, "Expected effect mosaic of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.brightness, 0, "Expected effect brightness of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).effects.ghost, 0, "Expected effect ghost of Clone 28 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.color, 44, "Expected effect color of Clone 29 of Balloon1 to be 44");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.fisheye, 0, "Expected effect fisheye of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.whirl, 0, "Expected effect whirl of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.pixelate, 0, "Expected effect pixelate of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.mosaic, 0, "Expected effect mosaic of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.brightness, 0, "Expected effect brightness of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).effects.ghost, 0, "Expected effect ghost of Clone 29 of Balloon1 to be 0");
  t.assert.equal(t.getSprite("Balloon1").layerOrder, 30, "Expected Sprite Balloon1 to be at layer 30");
  t.assert.equal(t.getSprite("Balloon1").getClone(13).getLayerOrder(), 13, "Expected Clone 13 of Balloon1 to be at layer 13");
  t.assert.equal(t.getSprite("Balloon1").getClone(14).getLayerOrder(), 14, "Expected Clone 14 of Balloon1 to be at layer 14");
  t.assert.equal(t.getSprite("Balloon1").getClone(15).getLayerOrder(), 15, "Expected Clone 15 of Balloon1 to be at layer 15");
  t.assert.equal(t.getSprite("Balloon1").getClone(16).getLayerOrder(), 16, "Expected Clone 16 of Balloon1 to be at layer 16");
  t.assert.equal(t.getSprite("Balloon1").getClone(17).getLayerOrder(), 17, "Expected Clone 17 of Balloon1 to be at layer 17");
  t.assert.equal(t.getSprite("Balloon1").getClone(18).getLayerOrder(), 18, "Expected Clone 18 of Balloon1 to be at layer 18");
  t.assert.equal(t.getSprite("Balloon1").getClone(19).getLayerOrder(), 19, "Expected Clone 19 of Balloon1 to be at layer 19");
  t.assert.equal(t.getSprite("Balloon1").getClone(20).getLayerOrder(), 20, "Expected Clone 20 of Balloon1 to be at layer 20");
  t.assert.equal(t.getSprite("Balloon1").getClone(21).getLayerOrder(), 21, "Expected Clone 21 of Balloon1 to be at layer 21");
  t.assert.equal(t.getSprite("Balloon1").getClone(22).getLayerOrder(), 22, "Expected Clone 22 of Balloon1 to be at layer 22");
  t.assert.equal(t.getSprite("Balloon1").getClone(23).getLayerOrder(), 23, "Expected Clone 23 of Balloon1 to be at layer 23");
  t.assert.equal(t.getSprite("Balloon1").getClone(24).getLayerOrder(), 24, "Expected Clone 24 of Balloon1 to be at layer 24");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).getLayerOrder(), 25, "Expected Clone 25 of Balloon1 to be at layer 25");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).getLayerOrder(), 26, "Expected Clone 26 of Balloon1 to be at layer 26");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).getLayerOrder(), 27, "Expected Clone 27 of Balloon1 to be at layer 27");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).getLayerOrder(), 28, "Expected Clone 28 of Balloon1 to be at layer 28");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).getLayerOrder(), 29, "Expected Clone 29 of Balloon1 to be at layer 29");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).x, 139.39856309380235, 5, "Expected Clone 1 of Balloon1 to have x-position 139.39856309380235 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(1).y, -101.4126913834765, 5, "Expected Clone 1 of Balloon1 to have y-position -101.4126913834765 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).x, 97.52742575040602, 5, "Expected Clone 2 of Balloon1 to have x-position 97.52742575040602 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(2).y, -14.53275590636033, 5, "Expected Clone 2 of Balloon1 to have y-position -14.53275590636033 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).x, -205.33126291998968, 5, "Expected Clone 3 of Balloon1 to have x-position -205.33126291998968 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(3).y, 31.854768440154782, 5, "Expected Clone 3 of Balloon1 to have y-position 31.854768440154782 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).x, -65.44040887794563, 5, "Expected Clone 4 of Balloon1 to have x-position -65.44040887794563 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(4).y, -18.17358610788105, 5, "Expected Clone 4 of Balloon1 to have y-position -18.17358610788105 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).x, 181.85911422761438, 5, "Expected Clone 5 of Balloon1 to have x-position 181.85911422761438 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(5).y, -15.761128342626806, 5, "Expected Clone 5 of Balloon1 to have y-position -15.761128342626806 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).x, 164.21390274215406, 5, "Expected Clone 6 of Balloon1 to have x-position 164.21390274215406 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(6).y, 16.87317118721787, 5, "Expected Clone 6 of Balloon1 to have y-position 16.87317118721787 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).x, -19.99485690808278, 5, "Expected Clone 7 of Balloon1 to have x-position -19.99485690808278 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(7).y, 80.79495195317014, 5, "Expected Clone 7 of Balloon1 to have y-position 80.79495195317014 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).x, 175.16318740228317, 5, "Expected Clone 8 of Balloon1 to have x-position 175.16318740228317 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(8).y, 7.175927618626304, 5, "Expected Clone 8 of Balloon1 to have y-position 7.175927618626304 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).x, 171.75331625582297, 5, "Expected Clone 9 of Balloon1 to have x-position 171.75331625582297 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(9).y, -120.42047212372955, 5, "Expected Clone 9 of Balloon1 to have y-position -120.42047212372955 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).x, 92.89323081115684, 5, "Expected Clone 10 of Balloon1 to have x-position 92.89323081115684 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(10).y, 32.02135690994642, 5, "Expected Clone 10 of Balloon1 to have y-position 32.02135690994642 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).x, 0.19554522531776874, 5, "Expected Clone 11 of Balloon1 to have x-position 0.19554522531776874 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(11).y, 38.3859012583197, 5, "Expected Clone 11 of Balloon1 to have y-position 38.3859012583197 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).x, -19.965486152161546, 5, "Expected Clone 12 of Balloon1 to have x-position -19.965486152161546 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(12).y, -11.85522626277365, 5, "Expected Clone 12 of Balloon1 to have y-position -11.85522626277365 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).x, 117.76983875550144, 5, "Expected Clone 13 of Balloon1 to have x-position 117.76983875550144 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(13).y, -78.10439805886764, 5, "Expected Clone 13 of Balloon1 to have y-position -78.10439805886764 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).x, 18.009682014367513, 5, "Expected Clone 14 of Balloon1 to have x-position 18.009682014367513 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(14).y, -72.64287846074404, 5, "Expected Clone 14 of Balloon1 to have y-position -72.64287846074404 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).x, 84.46629701602518, 5, "Expected Clone 15 of Balloon1 to have x-position 84.46629701602518 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(15).y, -67.93511863495696, 5, "Expected Clone 15 of Balloon1 to have y-position -67.93511863495696 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).x, -106.86219465571492, 5, "Expected Clone 16 of Balloon1 to have x-position -106.86219465571492 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(16).y, 62.97502200564807, 5, "Expected Clone 16 of Balloon1 to have y-position 62.97502200564807 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).x, -162.97532661533526, 5, "Expected Clone 17 of Balloon1 to have x-position -162.97532661533526 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(17).y, 2.8272898428399147, 5, "Expected Clone 17 of Balloon1 to have y-position 2.8272898428399147 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).x, -118.21629157329062, 5, "Expected Clone 18 of Balloon1 to have x-position -118.21629157329062 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(18).y, 21.62163790334767, 5, "Expected Clone 18 of Balloon1 to have y-position 21.62163790334767 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).x, -141.434666721728, 5, "Expected Clone 19 of Balloon1 to have x-position -141.434666721728 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(19).y, 10.986236572265636, 5, "Expected Clone 19 of Balloon1 to have y-position 10.986236572265636 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).x, 47.88200990408346, 5, "Expected Clone 20 of Balloon1 to have x-position 47.88200990408346 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(20).y, -18.198895607987676, 5, "Expected Clone 20 of Balloon1 to have y-position -18.198895607987676 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).x, 57.66068151793595, 5, "Expected Clone 21 of Balloon1 to have x-position 57.66068151793595 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(21).y, -43.705198327201266, 5, "Expected Clone 21 of Balloon1 to have y-position -43.705198327201266 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).x, 45.12618614145952, 5, "Expected Clone 22 of Balloon1 to have x-position 45.12618614145952 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(22).y, -38.65669943957532, 5, "Expected Clone 22 of Balloon1 to have y-position -38.65669943957532 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).x, -133.97715427345858, 5, "Expected Clone 23 of Balloon1 to have x-position -133.97715427345858 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(23).y, -16.382139034407356, 5, "Expected Clone 23 of Balloon1 to have y-position -16.382139034407356 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).x, -5.556283343369461, 5, "Expected Clone 24 of Balloon1 to have x-position -5.556283343369461 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(24).y, -63.261939631276334, 5, "Expected Clone 24 of Balloon1 to have y-position -63.261939631276334 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).x, 163.2880776358558, 5, "Expected Clone 25 of Balloon1 to have x-position 163.2880776358558 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).y, -39.320596757551414, 5, "Expected Clone 25 of Balloon1 to have y-position -39.320596757551414 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).x, 102.7724442702913, 5, "Expected Clone 26 of Balloon1 to have x-position 102.7724442702913 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).y, 26.550426955662772, 5, "Expected Clone 26 of Balloon1 to have y-position 26.550426955662772 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).x, 43.01654610295795, 5, "Expected Clone 27 of Balloon1 to have x-position 43.01654610295795 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).y, 23.526565217789955, 5, "Expected Clone 27 of Balloon1 to have y-position 23.526565217789955 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).x, 57.84140167863951, 5, "Expected Clone 28 of Balloon1 to have x-position 57.84140167863951 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).y, -105.86906538395337, 5, "Expected Clone 28 of Balloon1 to have y-position -105.86906538395337 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).x, -204.46306894036223, 5, "Expected Clone 29 of Balloon1 to have x-position -204.46306894036223 +-5");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).y, 65.04324549945339, 5, "Expected Clone 29 of Balloon1 to have y-position 65.04324549945339 +-5");
  t.assert.not(t.getSprite("Balloon1").getClone(25).sayText, "Expected Clone 25 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(26).sayText, "Expected Clone 26 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(27).sayText, "Expected Clone 27 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(28).sayText, "Expected Clone 28 of Balloon1 not to say anything");
  t.assert.not(t.getSprite("Balloon1").getClone(29).sayText, "Expected Clone 29 of Balloon1 not to say anything");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(25).size, 100, 1, "Expected Clone 25 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(26).size, 100, 1, "Expected Clone 26 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(27).size, 100, 1, "Expected Clone 27 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(28).size, 100, 1, "Expected Clone 28 of Balloon1 to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Balloon1").getClone(29).size, 100, 1, "Expected Clone 29 of Balloon1 to have size 100 +-1");
  t.assert.equal(t.getStage().getVariable("score", false).value, "1", "Expected score to have value 1");
  t.assert.equal(t.getStage().getVariable("time", false).value, "7", "Expected time to have value 7");
  t.assert.ok(t.getSprite("Balloon1").getClone(25).visible, "Expected Clone 25 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(26).visible, "Expected Clone 26 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(27).visible, "Expected Clone 27 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(28).visible, "Expected Clone 28 of Balloon1 to be visible");
  t.assert.ok(t.getSprite("Balloon1").getClone(29).visible, "Expected Clone 29 of Balloon1 to be visible");
  t.assert.equal(t.getSprite("Balloon1").getClone(25).volume, 100, "Expected Clone 25 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(26).volume, 100, "Expected Clone 26 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(27).volume, 100, "Expected Clone 27 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(28).volume, 100, "Expected Clone 28 of Balloon1 to have volume 100");
  t.assert.equal(t.getSprite("Balloon1").getClone(29).volume, 100, "Expected Clone 29 of Balloon1 to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1724933246190',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1724933246190',
      type: 'standard',
  },
  {
      test: test2,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1724933246190',
      type: 'standard',
  }
]
