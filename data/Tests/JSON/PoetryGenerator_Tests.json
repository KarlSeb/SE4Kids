{
  "tests": [
    {
      "name": "When Ada is clicked Ada says 'Hi, I'm Ada!' for 2 seconds",
      "code": "const testAdaClickSayHi = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    const ada = await t.getSprite('Ada');\n    t.assert.equal(ada.sayText, \"Hi, I'm Ada!\", \"Ada should say 'Hi, I'm Ada!' for 2 seconds\");\n    t.end();\n}"
    },
    {
      "name": "Afterwards Ada asks 'What's your name?'",
      "code": "const testAdaAskName = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    const ada = await t.getSprite('Ada');\n    t.assert.equal(ada.sayText, \"What's your name?\", \"Ada should ask 'What's your name?' after saying 'Hi, I'm Ada!'\");\n    t.end();\n}"
    },
    {
      "name": "The answer to that question is stored in the global variable name",
      "code": "const testStoreNameInGlobalVariable = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    const name = await t.getGlobalVariable('name');\n    t.assert.equal(name.value, 'John', \"The answer to the question should be stored in the global variable 'name'\");\n    t.end();\n}"
    },
    {
      "name": "Ada then says 'Hi [name]' for 2 seconds",
      "code": "const testAdaSayHiName = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    await t.runForTime(2000);\n    const ada = await t.getSprite('Ada');\n    t.assert.equal(ada.sayText, 'Hi John', \"Ada should say 'Hi [name]' for 2 seconds\");\n    t.end();\n}"
    },
    {
      "name": "Then Ada says 'Click the computer to generate a poem.' for 2 seconds",
      "code": "const testAdaSayClickComputer = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    await t.runForTime(4000);\n    const ada = await t.getSprite('Ada');\n    t.assert.equal(ada.sayText, 'Click the computer to generate a poem.', \"Ada should say 'Click the computer to generate a poem.' for 2 seconds\");\n    t.end();\n}"
    },
    {
      "name": "When Computer is clicked, Computer says 'Here is your poem [name]' for 2 seconds",
      "code": "const testComputerClickSayPoem = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    await t.runForTime(6000);\n    t.clickSprite('Computer');\n    await t.runForTime(2000);\n    const computer = await t.getSprite('Computer');\n    t.assert.equal(computer.sayText, 'Here is your poem John', \"Computer should say 'Here is your poem [name]' for 2 seconds\");\n    t.end();\n}"
    },
    {
      "name": "Computer then repeats the following sequence 10 times: turn 5 degrees to the left, wait for 0.1 seconds, turn 5 degrees to the right, wait for 0.1 seconds",
      "code": "const testComputerRepeatSequence = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    await t.runForTime(6000);\n    t.clickSprite('Computer');\n    await t.runForTime(2000);\n    const computer = await t.getSprite('Computer');\n    for (let i = 0; i < 10; i++) {\n        await t.runForTime(100);\n        t.assert.equal(computer.direction, -5, \"Computer should turn 5 degrees to the left\");\n        await t.runForTime(100);\n        t.assert.equal(computer.direction, 5, \"Computer should turn 5 degrees to the right\");\n    }\n    t.end();\n}"
    },
    {
      "name": "Computer then pick a random item from the 'verbs' list and says 'I [items]' for 2 seconds",
      "code": "const testComputerSayRandomVerb = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    await t.runForTime(6000);\n    t.clickSprite('Computer');\n    await t.runForTime(2000);\n    await t.runForTime(2000);\n    const computer = await t.getSprite('Computer');\n    const verbs = await computer.getList('verbs', true);\n    const verb = verbs[Math.floor(Math.random() * verbs.length)];\n    t.assert.equal(computer.sayText, `I ${verb}`, \"Computer should say 'I [verb]' for 2 seconds\");\n    t.end();\n}"
    },
    {
      "name": "Then Computer says a random item from the 'adverbs' list for 2 seconds",
      "code": "const testComputerSayRandomAdverb = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    await t.runForTime(6000);\n    t.clickSprite('Computer');\n    await t.runForTime(2000);\n    await t.runForTime(4000);\n    const computer = await t.getSprite('Computer');\n    const adverbs = await computer.getList('adverbs', true);\n    const adverb = adverbs[Math.floor(Math.random() * adverbs.length)];\n    t.assert.equal(computer.sayText, adverb, \"Computer should say a random item from the 'adverbs' list for 2 seconds\");\n    t.end();\n}"
    },
    {
      "name": "Afterwards Computer picks a random word from the 'nouns' list and says 'by the [item]' for 2 seconds",
      "code": "const testComputerSayRandomNoun = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    await t.runForTime(6000);\n    t.clickSprite('Computer');\n    await t.runForTime(2000);\n    await t.runForTime(6000);\n    const computer = await t.getSprite('Computer');\n    const nouns = await computer.getList('nouns', true);\n    const noun = nouns[Math.floor(Math.random() * nouns.length)];\n    t.assert.equal(computer.sayText, `by the ${noun}`, \"Computer should say 'by the [noun]' for 2 seconds\");\n    t.end();\n}"
    },
    {
      "name": "Then a random item from the 'adjectives' list is picked and Computer says 'I feel [item]' for 2 seconds",
      "code": "const testComputerSayRandomAdjective = async function (t) {\n    t.greenFlag();\n    await t.runForTime(3000);\n    t.clickSprite('Ada');\n    await t.runForTime(2000);\n    t.typeText('John');\n    await t.runForTime(1000);\n    await t.runForTime(6000);\n    t.clickSprite('Computer');\n    await t.runForTime(2000);\n    await t.runForTime(8000);\n    const computer = await t.getSprite('Computer');\n    const adjectives = await computer.getList('adjectives', true);\n    const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n    t.assert.equal(computer.sayText, `I feel ${adjective}`, \"Computer should say 'I feel [adjective]' for 2 seconds\");\n    t.end();\n}"
    }
  ]
}