{
    "tests": [
        {
            "name": "Nano starts with costume 'nano-a'",
            "code": "const testNanoStartCostume = async function (t) {\n    t.seedScratch(1234);\n    t.greenFlag();\n    await t.runUntil(() => t.getSprite('Nano').currentCostume === t.getSprite('Nano').getCostumeByName('nano-a').index, 5000);\n    const nano = t.getSprite('Nano');\n    t.assert.strictEqual(nano.getCostumeByIndex(nano.currentCostume).name, 'nano-a', 'Nano should start with costume nano-a');\n    t.end();\n}"
        },
        {
            "name": "Nano changes to costume 'nano-b' when clicked",
            "code": "const testNanoClickCostumeChange = async function (t) {\n    t.seedScratch(1234);\n    t.greenFlag();\n    await t.runUntil(() => t.getSprite('Nano').currentCostume === t.getSprite('Nano').getCostumeByName('nano-a').index, 5000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').currentCostume === t.getSprite('Nano').getCostumeByName('nano-b').index, 5000);\n    const nano = t.getSprite('Nano');\n    t.assert.strictEqual(nano.getCostumeByIndex(nano.currentCostume).name, 'nano-b', 'Nano should change to costume nano-b when clicked');\n    t.end();\n}"
        },
        {
            "name": "Stage costume changes to 'space' when Nano is clicked",
            "code": "const testStageCostumeChangeOnNanoClick = async function (t) {\n    t.seedScratch(1234);\n    t.greenFlag();\n    await t.runUntil(() => t.getSprite('Nano').currentCostume === t.getSprite('Nano').getCostumeByName('nano-a').index, 5000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getStage().currentCostume === t.getStage().getCostumeByName('space').index, 5000);\n    const stage = t.getStage();\n    t.assert.strictEqual(stage.getCostumeByIndex(stage.currentCostume).name, 'space', 'Stage costume should change to space when Nano is clicked');\n    t.end();\n}"
        }
  ,
    {
      "name": "Nano asks 'What's your name?' after being clicked",
      "code": "const testNanoAsksName = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.assert.equal(t.getSprite('Nano').sayText, \"What's your name?\", \"Nano should ask 'What's your name?' after being clicked\");\n    t.end();\n}"
    },
    {
      "name": "Answer to 'What's your name?' is stored in global variable 'name'",
      "code": "const testStoreNameInGlobalVariable = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    t.assert.equal(t.getGlobalVariable('name').value, 'Alice', \"The answer to 'What's your name?' should be stored in the global variable 'name'\");\n    t.end();\n}"
    },
    {
      "name": "Nano says 'Hi [name]' for 2 seconds after 'What's your name?' is answered",
      "code": "const testNanoSaysHi = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    t.assert.equal(t.getSprite('Nano').sayText, 'Hi Alice', \"Nano should say 'Hi [name]' for 2 seconds after 'What's your name?' is answered\");\n    t.end();\n}"
    },
    {
      "name": "Nano asks 'Are you OK [name]' after saying 'Hi [name]'",
      "code": "const testNanoAsksAreYouOK = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.assert.equal(t.getSprite('Nano').sayText, 'Are you OK Alice', \"Nano should ask 'Are you OK [name]' after saying 'Hi [name]'\");\n    t.end();\n}"
    },
    {
      "name": "Nano changes costume to 'nano-c' if answer to 'Are you OK [name]' is 'yes'",
      "code": "const testNanoCostumeChangeYes = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.typeText('yes');\n    await t.runForTime(1000);\n    t.assert.equal(t.getSprite('Nano').currentCostume.name, 'nano-c', \"Nano's costume should change to 'nano-c' if the answer to 'Are you OK [name]' is 'yes'\");\n    t.end();\n}"
    },
    {
      "name": "Nano says 'That's great to hear!' for 2 seconds if answer to 'Are you OK [name]' is 'yes'",
      "code": "const testNanoSaysGreatToHear = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.typeText('yes');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"That's great to hear!\", 5000);\n    t.assert.equal(t.getSprite('Nano').sayText, \"That's great to hear!\", \"Nano should say 'That's great to hear!' for 2 seconds if the answer to 'Are you OK [name]' is 'yes'\");\n    t.end();\n}"
    },
    {
      "name": "Nano changes costume to 'nano-d' if answer to 'Are you OK [name]' is not 'yes'",
      "code": "const testNanoCostumeChangeNo = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.typeText('no');\n    await t.runForTime(1000);\n    t.assert.equal(t.getSprite('Nano').currentCostume.name, 'nano-d', \"Nano's costume should change to 'nano-d' if the answer to 'Are you OK [name]' is not 'yes'\");\n    t.end();\n}"
    },
    {
      "name": "Nano says 'Oh no!' for 2 seconds if answer to 'Are you OK [name]' is not 'yes'",
      "code": "const testNanoSaysOhNo = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.typeText('no');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Oh no!', 5000);\n    t.assert.equal(t.getSprite('Nano').sayText, 'Oh no!', \"Nano should say 'Oh no!' for 2 seconds if the answer to 'Are you OK [name]' is not 'yes'\");\n    t.end();\n}"
    },
    {
      "name": "Nano changes costume to 'nano-b' after saying 'Oh no!' for 2 seconds",
      "code": "const testNanoCostumeChangeAfterOhNo = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.typeText('no');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Oh no!', 5000);\n    await t.runForTime(2000);\n    t.assert.equal(t.getSprite('Nano').currentCostume.name, 'nano-b', \"Nano's costume should change to 'nano-b' after saying 'Oh no!' for 2 seconds\");\n    t.end();\n}"
    },
    {
      "name": "Nano asks 'Do you want to go to the moon?' after responding to 'Are you OK [name]'",
      "code": "const testNanoAsksGoToMoon = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.typeText('yes');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"That's great to hear!\", 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Do you want to go to the moon?', 5000);\n    t.assert.equal(t.getSprite('Nano').sayText, 'Do you want to go to the moon?', \"Nano should ask 'Do you want to go to the moon?' after responding to 'Are you OK [name]'\");\n    t.end();\n}"
    },
    {
      "name": "Stage costume changes to 'moon' if answer to 'Do you want to go to the moon?' is 'yes'",
      "code": "const testStageCostumeChangeMoon = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.typeText('yes');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"That's great to hear!\", 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Do you want to go to the moon?', 5000);\n    t.typeText('yes');\n    await t.runForTime(1000);\n    t.assert.equal(t.getStage().currentCostume.name, 'moon', \"Stage costume should change to 'moon' if the answer to 'Do you want to go to the moon?' is 'yes'\");\n    t.end();\n}"
    },
    {
      "name": "Nano moves up and down 4 times if answer to 'Do you want to go to the moon?' is 'yes'",
      "code": "const testNanoMovesUpDown = async function (t) {\n    t.greenFlag();\n    await t.runForTime(1000);\n    t.clickSprite('Nano');\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"What's your name?\", 5000);\n    t.typeText('Alice');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Hi Alice', 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Are you OK Alice', 5000);\n    t.typeText('yes');\n    await t.runForTime(1000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === \"That's great to hear!\", 5000);\n    await t.runForTime(2000);\n    await t.runUntil(() => t.getSprite('Nano').sayText === 'Do you want to go to the moon?', 5000);\n    t.typeText('yes');\n    await t.runForTime(1000);\n    const initialY = t.getSprite('Nano').y;\n    for (let i = 0; i < 4; i++) {\n        await t.runForTime(100);\n        t.assert.notEqual(t.getSprite('Nano').y, initialY, \"Nano should move up and down\");\n        await t.runForTime(100);\n        t.assert.equal(t.getSprite('Nano').y, initialY, \"Nano should move up and down\");\n    }\n    t.end();\n}"
    }
  ]
}